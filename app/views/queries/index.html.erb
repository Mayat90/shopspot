<%= render 'shared/navbar' %>
<div class="indexcontent">
  <div class="indexcards">
    <%= render 'shared/result_card' %>
    <button class="btn btn-primary" id="btn-newaddress">Compare with new address</button>
  </div>
  <div class="indexmap">
    <div id="mapcaption" style="height: 100px; position: relative;">
      <div class="stacked-bar-graph">
        <span style="width:30%" class="bar-3">Pertinence</span>
        <span style="width:30%" class="bar-1">Population</span>
        <span style="width:30%" class="bar-2">Competitors</span>
      </div>
      <div id="mapsettings">
        <p>Highlight : </p>
        <div id="setting-current">
          <div id="slidecontainer">
            <input type="range" min="0" max="100" oninput="heatmap.set('opacity', (this.value/100));" value="50">
            <input type="range" min="0" max="100" id="sliderp" value="35">
          </div>
        </div>
      </div>
    </div>
    <div style="height: 600px; position: relative;">
      <div style = "background-color: white; position: absolute; right: 10px; top: 50px; z-index:20">
        <div id="setting-button"  onclick="openset()">
          <i id="setting-open" class="fa fa-cogs fa-fw fa-lg"></i>
        </div>
        <div id="show-setting" class="infohide">
          <p style="text-align:right; margin:0" ><i id="setting-close" onclick="closeset()" class="fa fa-close"></i></p>
          
        </div>
          <div id="infos-button"  onclick="openinf()">
            <i id="infos-open" class="fa fa-info-circle fa-fw fa-lg"></i>
          </div>
          <div id="show-content" class="infohide">
            <p style="text-align:right; margin:0" ><i id="infos-close" onclick="closeinf()" class="fa fa-close"></i></p>
            <h3>Informations : </h3>
            <div id="infos-current">
              <p><b>Population : </b> <span id="pop">--</span> habitants</p>
              <p><b>Revenus : </b> <span id="rev">--</span> â‚¬</p>
              <p><b>65 ans et plus :</b> <span id="res65">--</span> %</p>
              <p><b>25 ans et moins :</b> <span id="res25">--</span> %</p>
            </div>
          </div>
        </div>
       

      <div id="map"
        style="width: 100%; height: calc(100vh - 190px);"
        data-lat="<%= @query["latitude"] %>"
        data-long="<%= @query["longitude"] %>"
        data-zoom="14"
        data-radius="<%= @query['radius_catchment_area'] %>"
        data-radiussearch="<%= @query['radius_search'] %>"
      ></div>
      </div>
    </div>
  </div>
</div>


<% content_for(:after_js) do %>
  <%= javascript_tag do %>



    let heatmap = null;
    function metersPerPixel(map) {
      return (Math.cos(<%= @query["latitude"] %> * Math.PI/180) * 2 * Math.PI * 6378137 / (256 * Math.pow(2, map.getZoom())));
    }
    function changeRadius(radius) {
      heatmap.set('radius', radius * 1.3);
    }

      function changeGradient() {
        var gradient = [
          'rgba(0, 255, 255, 0)',
          'rgba(0, 127, 255, 1)',
          'rgba(0, 0, 223, 1)',
          'rgba(0, 0, 127, 1)',
          'rgba(191, 0, 31, 1)',
          'rgba(255, 0, 0, 1)',
          'rgba(255, 0, 0, 1)',
          'rgba(255, 0, 0, 1)'
        ]
        heatmap.set('gradient', heatmap.get('gradient') ? null : gradient);
      }

    function addcompetitors(map) {
      let markers = [];
      let points = [];
      let bounds = new google.maps.LatLngBounds();
      <% @competitors.each do |competitor| %>
        var marker = new google.maps.Marker({
          position: {lat:<%= competitor["lat"].to_f%>, lng:<%= competitor["lng"].to_f %>},
          map: map,
          title: 'Hello World!'
        });
        markers.push(marker);
        points.push(new google.maps.LatLng(<%= competitor["lat"].to_f%>, <%= competitor["lng"].to_f %>))
        bounds.extend( marker.getPosition() );
      <% end %>
      map.fitBounds(bounds);

    var radius = Math.floor(<%= @query['radius_catchment_area'] %> / metersPerPixel(map));
        heatmap = new google.maps.visualization.HeatmapLayer({
          data: points,
          radius: radius,
          radiusCatch: <%= @query['radius_catchment_area'] %>,
          map: map
        });
        changeGradient();
      map.addListener('zoom_changed', function() {
        var radius = Math.floor(heatmap.radiusCatch / metersPerPixel(map));
        changeRadius(radius);
      });

    }

  <% end %>
<% end %>
